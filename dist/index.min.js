"use strict";var LoggingLevel;Object.defineProperty(exports,"__esModule",{value:!0}),function(LoggingLevel){LoggingLevel[LoggingLevel.Debug=20]="Debug",LoggingLevel[LoggingLevel.Info=30]="Info",LoggingLevel[LoggingLevel.Warn=40]="Warn",LoggingLevel[LoggingLevel.Error=50]="Error"}(LoggingLevel||(LoggingLevel={}));const logMessage=(msg,level,name)=>{msg.name=name,msg.level=level;const msgText=JSON.stringify(msg);switch(level){case LoggingLevel.Error:console.error(msgText);break;case LoggingLevel.Warn:console.warn(msgText);break;case LoggingLevel.Info:console.log(msgText);break;case LoggingLevel.Debug:console.debug(msgText);break;default:console.log(msgText)}},objectifyMessage=msg=>"object"==typeof msg?msg:{message:msg},logger=options=>{const name=options.name?options.name:process.env.AWS_LAMBDA_NAME,level=options.level?options.level:process.env.LOGGING_LEVEL||50,logger={name:name,level:level};return logger.debug=logger.level>LoggingLevel.Debug?debug=>{}:debug=>{logMessage(objectifyMessage(debug),LoggingLevel.Debug,name)},logger.info=logger.level>LoggingLevel.Info?info=>{}:info=>{logMessage(objectifyMessage(info),LoggingLevel.Info,name)},logger.warn=logger.level>LoggingLevel.Warn?warn=>{}:warn=>{logMessage(objectifyMessage(warn),LoggingLevel.Warn,name)},logger.error=logger.level>LoggingLevel.Error?error=>{}:error=>{logMessage(objectifyMessage(error),LoggingLevel.Error,name)},logger};exports.default=logger;